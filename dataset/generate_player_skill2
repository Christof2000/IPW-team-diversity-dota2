from time import sleep
import pandas as pd
import requests


def json_to_csv(jObj):
    s = ""
    ls = jObj.keys()
    ls = sorted(ls)
    for val in ls:
        s += "," + str(jObj[val]) 
    return s[1:] + '\n'


def json_to_csv_columns(jObj):
    s = ""
    ls = jObj.keys()
    ls = sorted(ls)
    for val in ls:
        s += "," + str(val) 
    return s[1:] + '\n'


matches_df = pd.read_csv("data_files/data_matches.csv")

#there might be duplicate players
player_accounts_and_matches = []
for index, row in matches_df[["account_id", "match_id"]].iterrows():
    player_accounts_and_matches.append(row)
    print(row['account_id'])


def create_api_string(account_id):
    return "https://api.opendota.com/api/players/" +  str(account_id) + "/ratings"

# /players/{account_id}/ratings
# [
# {
# "account_id": 0,
# "match_id": 0,
# "solo_competitive_rank": 0,
# "competitive_rank": 0,
# "time": 0
# }
# ]

firstTime = True
for row in player_accounts_and_matches:
    r = requests.get(create_api_string(account_id=row['account_id']))
    print(create_api_string(account_id=row['account_id']))
    if r.status_code == 200:
        obj = r.json()
        #del obj["profile"]

        #add account id field
        #obj["account_id"] = row['account_id']
        print(obj)
        res = None
        for item in obj:
            print(str(item['match_id']) + " - " + str(row['match_id']))
            if item['match_id'] == row['match_id']:
                res = item
                break
        
        print(res)
        if res != None:
            with open("data_files/data_" + "players" + ".csv",'a') as fd:            
                #adding column names
                if firstTime:
                    fd.write(json_to_csv_columns(res))
                    firstTime = False
                
                entry = json_to_csv(res)
                print(entry)
                #adding entry
                fd.write(entry)

        sleep(0.5)
    else:
        print(r._content)
        print("Error -> Probably a timeout,waiting 10 seconds")
        player_accounts_and_matches.append(row)
        sleep(10)

    
